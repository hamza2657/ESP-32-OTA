[1/13] Generating ../../app.css.S
[2/13] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\ESP32 Attendance System\udemy_esp32\build\bootloader\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/ESP32 Attendance System/udemy_esp32/build/bootloader/bootloader.bin""
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[3/11] Building ASM object esp-idf/main/CMakeFiles/__idf_main.dir/__/__/app.css.S.obj
[4/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/http_server.c.obj
[6/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/wifi_app.c.obj
[7/11] Linking C static library esp-idf\main\libmain.a
[8/11] Generating ld/sections.ld
[9/11] Linking CXX executable udemy_esp32_app.elf
[10/11] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/ESP32 Attendance System/udemy_esp32/build/udemy_esp32_app.bin
[11/11] cmd.exe /C "cd /D "D:\ESP32 Attendance System\udemy_esp32\build\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/ESP32 Attendance System/udemy_esp32/build/partition_table/partition-table.bin" "D:/ESP32 Attendance System/udemy_esp32/build/udemy_esp32_app.bin""
udemy_esp32_app.bin binary size 0x106600 bytes. Smallest app partition is 0x1f0000 bytes. 0xe9a00 bytes (47%) free.
